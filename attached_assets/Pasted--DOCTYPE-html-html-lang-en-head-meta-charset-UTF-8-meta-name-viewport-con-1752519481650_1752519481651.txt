<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PrepQuiz Pro</title>
    <meta name="description" content="Professional offline-first quiz app for technical interview preparation">
    <meta name="theme-color" content="#6366f1">
    <link rel="manifest" href="manifest.json">
    <link rel="icon" href="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'%3E%3Ctext y='.9em' font-size='90'%3E🎯%3C/text%3E%3C/svg%3E">
    <style>
        :root {
            --primary: #6366f1;
            --primary-dark: #4f46e5;
            --secondary: #64748b;
            --success: #22c55e;
            --warning: #f59e0b;
            --error: #ef4444;
            --background: #f8fafc;
            --surface: #ffffff;
            --text: #1e293b;
            --text-light: #64748b;
            --border: #e2e8f0;
            --shadow: rgba(0, 0, 0, 0.1);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: var(--text);
            line-height: 1.6;
        }

        .app-container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            min-height: 100vh;
        }

        /* Header Styles */
        .app-header {
            text-align: center;
            margin-bottom: 40px;
            padding: 30px;
            background: rgba(255, 255, 255, 0.15);
            backdrop-filter: blur(20px);
            border-radius: 24px;
            border: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }

        .app-header h1 {
            font-size: 3rem;
            color: white;
            margin-bottom: 10px;
            text-shadow: 0 2px 4px rgba(0,0,0,0.3);
            font-weight: 700;
        }

        .app-header p {
            color: rgba(255, 255, 255, 0.9);
            font-size: 1.2rem;
            margin-bottom: 15px;
        }

        .app-status {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-top: 20px;
        }

        .status-badge {
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 0.85rem;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 6px;
        }

        .status-online {
            background: rgba(34, 197, 94, 0.2);
            color: #22c55e;
            border: 1px solid rgba(34, 197, 94, 0.3);
        }

        .status-offline {
            background: rgba(239, 68, 68, 0.2);
            color: #ef4444;
            border: 1px solid rgba(239, 68, 68, 0.3);
        }

        .status-installed {
            background: rgba(99, 102, 241, 0.2);
            color: #6366f1;
            border: 1px solid rgba(99, 102, 241, 0.3);
        }

        /* Subject Grid */
        .subjects-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 24px;
            margin-bottom: 40px;
        }

        .subject-card {
            background: var(--surface);
            padding: 32px;
            border-radius: 20px;
            box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
            border: 1px solid var(--border);
            cursor: pointer;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            text-align: center;
            position: relative;
            overflow: hidden;
        }

        .subject-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, var(--primary), var(--primary-dark));
            transform: scaleX(0);
            transition: transform 0.3s ease;
        }

        .subject-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);
        }

        .subject-card:hover::before {
            transform: scaleX(1);
        }

        .subject-emoji {
            font-size: 4rem;
            margin-bottom: 20px;
            display: block;
        }

        .subject-card h3 {
            font-size: 1.5rem;
            margin-bottom: 12px;
            color: var(--text);
            font-weight: 600;
        }

        .subject-card p {
            color: var(--text-light);
            margin-bottom: 20px;
            font-size: 1rem;
        }

        .subject-stats {
            display: flex;
            justify-content: space-around;
            margin-top: 20px;
            padding-top: 20px;
            border-top: 1px solid var(--border);
        }

        .stat-item {
            text-align: center;
        }

        .stat-value {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--primary);
        }

        .stat-label {
            font-size: 0.8rem;
            color: var(--text-light);
            margin-top: 4px;
        }

        /* Quiz Container */
        .quiz-container {
            background: var(--surface);
            padding: 40px;
            border-radius: 20px;
            box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
            display: none;
        }

        .quiz-header {
            text-align: center;
            margin-bottom: 40px;
        }

        .quiz-title {
            font-size: 2rem;
            color: var(--text);
            margin-bottom: 20px;
            font-weight: 600;
        }

        .progress-container {
            margin: 20px 0;
        }

        .progress-bar {
            width: 100%;
            height: 8px;
            background: var(--border);
            border-radius: 8px;
            overflow: hidden;
            margin-bottom: 10px;
        }

        .progress-fill {
            height: 100%;
            background: linear-gradient(90deg, var(--primary), var(--primary-dark));
            transition: width 0.3s ease;
            border-radius: 8px;
        }

        .progress-text {
            text-align: center;
            color: var(--text-light);
            font-size: 0.9rem;
        }

        /* Question Styles */
        .question-container {
            margin-bottom: 40px;
        }

        .question-text {
            font-size: 1.3rem;
            color: var(--text);
            margin-bottom: 30px;
            line-height: 1.6;
            font-weight: 500;
        }

        .options-grid {
            display: grid;
            gap: 16px;
        }

        .option {
            padding: 20px 24px;
            border: 2px solid var(--border);
            border-radius: 12px;
            cursor: pointer;
            transition: all 0.3s ease;
            background: var(--surface);
            font-size: 1rem;
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .option::before {
            content: '';
            width: 20px;
            height: 20px;
            border: 2px solid var(--border);
            border-radius: 50%;
            flex-shrink: 0;
            transition: all 0.3s ease;
        }

        .option:hover {
            border-color: var(--primary);
            background: rgba(99, 102, 241, 0.05);
        }

        .option.selected {
            border-color: var(--primary);
            background: rgba(99, 102, 241, 0.1);
        }

        .option.selected::before {
            background: var(--primary);
            border-color: var(--primary);
        }

        .option.correct {
            border-color: var(--success);
            background: rgba(34, 197, 94, 0.1);
        }

        .option.correct::before {
            background: var(--success);
            border-color: var(--success);
        }

        .option.incorrect {
            border-color: var(--error);
            background: rgba(239, 68, 68, 0.1);
        }

        .option.incorrect::before {
            background: var(--error);
            border-color: var(--error);
        }

        /* Buttons */
        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 10px;
            font-size: 1rem;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }

        .btn-primary {
            background: var(--primary);
            color: white;
        }

        .btn-primary:hover:not(:disabled) {
            background: var(--primary-dark);
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(99, 102, 241, 0.3);
        }

        .btn-secondary {
            background: var(--secondary);
            color: white;
        }

        .btn-secondary:hover:not(:disabled) {
            background: #475569;
        }

        .btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        .quiz-actions {
            display: flex;
            gap: 16px;
            justify-content: center;
            margin-top: 40px;
        }

        /* Result Screen */
        .result-container {
            text-align: center;
            padding: 40px;
            background: var(--surface);
            border-radius: 20px;
            box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
            display: none;
        }

        .result-header {
            margin-bottom: 30px;
        }

        .result-title {
            font-size: 2.5rem;
            margin-bottom: 20px;
            color: var(--text);
        }

        .score-display {
            font-size: 4rem;
            font-weight: 700;
            margin: 30px 0;
        }

        .score-excellent { color: var(--success); }
        .score-good { color: var(--warning); }
        .score-poor { color: var(--error); }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 20px;
            margin: 40px 0;
        }

        .stat-card {
            padding: 24px;
            background: rgba(99, 102, 241, 0.05);
            border-radius: 16px;
            border: 1px solid rgba(99, 102, 241, 0.1);
        }

        .stat-card-value {
            font-size: 2rem;
            font-weight: 700;
            color: var(--primary);
            margin-bottom: 8px;
        }

        .stat-card-label {
            color: var(--text-light);
            font-size: 0.9rem;
        }

        /* Install Prompt */
        .install-prompt {
            position: fixed;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            background: var(--text);
            color: white;
            padding: 16px 24px;
            border-radius: 12px;
            display: none;
            align-items: center;
            gap: 16px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
            z-index: 1000;
        }

        .install-prompt.show {
            display: flex;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .app-container {
                padding: 16px;
            }

            .subjects-grid {
                grid-template-columns: 1fr;
            }

            .app-header h1 {
                font-size: 2.5rem;
            }

            .quiz-container,
            .result-container {
                padding: 24px;
            }

            .stats-grid {
                grid-template-columns: 1fr;
            }

            .quiz-actions {
                flex-direction: column;
                align-items: center;
            }

            .install-prompt {
                left: 16px;
                right: 16px;
                transform: none;
            }
        }

        /* Loading Animation */
        .loading {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            border-top-color: white;
            animation: spin 1s ease-in-out infinite;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        /* Animations */
        .fade-in {
            animation: fadeIn 0.5s ease-in-out;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
    </style>
</head>
<body>
    <div class="install-prompt" id="install-prompt">
        <span>📱 Install PrepQuiz Pro for offline access</span>
        <button class="btn btn-primary" id="install-btn">Install</button>
        <button class="btn btn-secondary" id="dismiss-btn">✕</button>
    </div>

    <div class="app-container">
        <!-- Home Screen -->
        <div id="home-screen" class="fade-in">
            <div class="app-header">
                <h1>🎯 PrepQuiz Pro</h1>
                <p>Master technical interviews with offline practice</p>
                <div class="app-status">
                    <div class="status-badge" id="connection-status">
                        <span id="connection-indicator">🌐</span>
                        <span id="connection-text">Online</span>
                    </div>
                    <div class="status-badge status-installed" id="pwa-status" style="display: none;">
                        <span>📱</span>
                        <span>Installed</span>
                    </div>
                </div>
            </div>

            <div class="subjects-grid">
                <div class="subject-card" data-subject="dsa">
                    <span class="subject-emoji">🌳</span>
                    <h3>Data Structures & Algorithms</h3>
                    <p>Arrays, Trees, Graphs, Sorting, Searching</p>
                    <div class="subject-stats">
                        <div class="stat-item">
                            <div class="stat-value" id="dsa-questions">15</div>
                            <div class="stat-label">Questions</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-value" id="dsa-best">--</div>
                            <div class="stat-label">Best Score</div>
                        </div>
                    </div>
                </div>

                <div class="subject-card" data-subject="dbms">
                    <span class="subject-emoji">🗄️</span>
                    <h3>Database Management</h3>
                    <p>SQL, Normalization, Transactions, Indexing</p>
                    <div class="subject-stats">
                        <div class="stat-item">
                            <div class="stat-value" id="dbms-questions">12</div>
                            <div class="stat-label">Questions</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-value" id="dbms-best">--</div>
                            <div class="stat-label">Best Score</div>
                        </div>
                    </div>
                </div>

                <div class="subject-card" data-subject="os">
                    <span class="subject-emoji">💻</span>
                    <h3>Operating Systems</h3>
                    <p>Processes, Memory, Scheduling, Synchronization</p>
                    <div class="subject-stats">
                        <div class="stat-item">
                            <div class="stat-value" id="os-questions">12</div>
                            <div class="stat-label">Questions</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-value" id="os-best">--</div>
                            <div class="stat-label">Best Score</div>
                        </div>
                    </div>
                </div>

                <div class="subject-card" data-subject="cn">
                    <span class="subject-emoji">🌐</span>
                    <h3>Computer Networks</h3>
                    <p>TCP/IP, OSI Model, Protocols, Security</p>
                    <div class="subject-stats">
                        <div class="stat-item">
                            <div class="stat-value" id="cn-questions">10</div>
                            <div class="stat-label">Questions</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-value" id="cn-best">--</div>
                            <div class="stat-label">Best Score</div>
                        </div>
                    </div>
                </div>

                <div class="subject-card" data-subject="aptitude">
                    <span class="subject-emoji">🧮</span>
                    <h3>Aptitude</h3>
                    <p>Logical Reasoning, Quantitative, Verbal</p>
                    <div class="subject-stats">
                        <div class="stat-item">
                            <div class="stat-value" id="aptitude-questions">15</div>
                            <div class="stat-label">Questions</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-value" id="aptitude-best">--</div>
                            <div class="stat-label">Best Score</div>
                        </div>
                    </div>
                </div>

                <div class="subject-card" data-subject="javascript">
                    <span class="subject-emoji">⚡</span>
                    <h3>JavaScript</h3>
                    <p>ES6+, DOM, Async/Await, Closures</p>
                    <div class="subject-stats">
                        <div class="stat-item">
                            <div class="stat-value" id="javascript-questions">10</div>
                            <div class="stat-label">Questions</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-value" id="javascript-best">--</div>
                            <div class="stat-label">Best Score</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Quiz Screen -->
        <div id="quiz-screen" class="quiz-container">
            <div class="quiz-header">
                <h2 class="quiz-title" id="quiz-title">Quiz Title</h2>
                <div class="progress-container">
                    <div class="progress-bar">
                        <div class="progress-fill" id="progress-fill"></div>
                    </div>
                    <p class="progress-text" id="progress-text">Question 1 of 10</p>
                </div>
            </div>

            <div class="question-container">
                <h3 class="question-text" id="question-text">Question will appear here...</h3>
                <div class="options-grid" id="options-container">
                    <!-- Options will be dynamically generated -->
                </div>
            </div>

            <div class="quiz-actions">
                <button class="btn btn-secondary" id="prev-btn" disabled>← Previous</button>
                <button class="btn btn-primary" id="next-btn">Next →</button>
                <button class="btn btn-primary" id="submit-btn" style="display: none;">Submit Quiz</button>
            </div>
        </div>

        <!-- Result Screen -->
        <div id="result-screen" class="result-container">
            <div class="result-header">
                <h2 class="result-title">🎉 Quiz Complete!</h2>
                <div class="score-display" id="final-score">8/10</div>
            </div>
            
            <div class="stats-grid">
                <div class="stat-card">
                    <div class="stat-card-value" id="correct-count">8</div>
                    <div class="stat-card-label">Correct</div>
                </div>
                <div class="stat-card">
                    <div class="stat-card-value" id="incorrect-count">2</div>
                    <div class="stat-card-label">Incorrect</div>
                </div>
                <div class="stat-card">
                    <div class="stat-card-value" id="percentage">80%</div>
                    <div class="stat-card-label">Score</div>
                </div>
                <div class="stat-card">
                    <div class="stat-card-value" id="time-taken">2:45</div>
                    <div class="stat-card-label">Time</div>
                </div>
            </div>

            <div class="quiz-actions">
                <button class="btn btn-secondary" id="home-btn">🏠 Home</button>
                <button class="btn btn-primary" id="retake-btn">🔄 Retake Quiz</button>
            </div>
        </div>
    </div>

    <script>
        // Enhanced Questions Database
        const questionsDB = {
            dsa: [
                {
                    question: "What is the time complexity of binary search in a sorted array?",
                    options: ["O(n)", "O(log n)", "O(n log n)", "O(1)"],
                    correct: 1,
                    explanation: "Binary search divides the search space in half at each step, resulting in O(log n) time complexity."
                },
                {
                    question: "Which data structure follows the LIFO (Last In, First Out) principle?",
                    options: ["Queue", "Stack", "Array", "Linked List"],
                    correct: 1,
                    explanation: "Stack follows LIFO principle where the last element added is the first one to be removed."
                },
                {
                    question: "What is the worst-case time complexity of quicksort?",
                    options: ["O(n log n)", "O(n²)", "O(n)", "O(log n)"],
                    correct: 1,
                    explanation: "Quicksort has O(n²) worst-case complexity when the pivot is always the smallest or largest element."
                },
                {
                    question: "Which tree traversal visits the root node first?",
                    options: ["Inorder", "Preorder", "Postorder", "Level order"],
                    correct: 1,
                    explanation: "Preorder traversal visits root first, then left subtree, then right subtree."
                },
                {
                    question: "What is the space complexity of merge sort?",
                    options: ["O(1)", "O(log n)", "O(n)", "O(n log n)"],
                    correct: 2,
                    explanation: "Merge sort requires O(n) additional space for merging the subarrays."
                },
                {
                    question: "Which sorting algorithm is stable?",
                    options: ["Quick Sort", "Heap Sort", "Merge Sort", "Selection Sort"],
                    correct: 2,
                    explanation: "Merge sort is stable as it maintains the relative order of equal elements."
                },
                {
                    question: "What defines a balanced binary tree?",
                    options: ["Equal left and right subtrees", "Height difference ≤ 1", "All leaves at same level", "Maximum nodes"],
                    correct: 1,
                    explanation: "A balanced binary tree has height difference of at most 1 between left and right subtrees."
                },
                {
                    question: "Best case time complexity of insertion sort?",
                    options: ["O(n²)", "O(n log n)", "O(n)", "O(log n)"],
                    correct: 2,
                    explanation: "Insertion sort has O(n) best-case complexity when the array is already sorted."
                },
                {
                    question: "What is a hash collision?",
                    options: ["Two keys hash to same index", "Hash function fails", "Memory overflow", "Key not found"],
                    correct: 0,
                    explanation: "Hash collision occurs when two different keys produce the same hash value."
                },
                {
                    question: "Which data structure is used for BFS?",
                    options: ["Stack", "Queue", "Priority Queue", "Deque"],
                    correct: 1,
                    explanation: "BFS uses a queue to process nodes level by level."
                },
                {
                    question: "Time complexity of finding minimum in a min-heap?",
                    options: ["O(n)", "O(log n)", "O(1)", "O(n log n)"],
                    correct: 2,
                    explanation: "In a min-heap, the minimum element is always at the root, accessible in O(1) time."
                },
                {
                    question: "What is the maximum number of edges in a simple graph with n vertices?",
                    options: ["n", "n-1", "n(n-1)/2", "n²"],
                    correct: 2,
                    explanation: "A complete graph with n vertices has n(n-1)/2 edges."
                },
                {
                    question: "Which algorithm is used to find shortest path in weighted graphs?",
                    options: ["BFS", "DFS", "Dijkstra's", "Kruskal's"],
                    correct: 2,
                    explanation: "Dijkstra's algorithm finds shortest path from source to all vertices in weighted graphs."
                },
                {
                    question: "What is the time complexity of accessing an element in a dynamic array?",
                    options: ["O(1)", "O(n)", "O(log n)", "O(n log n)"],
                    correct: 0,
                    explanation: "Dynamic arrays provide O(1) random access to elements by index."
                },
                {
                    question: "Which of the following is NOT a stable sorting algorithm?",
                    options: ["Bubble Sort", "Insertion Sort", "Quick Sort", "Merge Sort"],
                    correct: 2,
                    explanation: "Quick sort is not stable as it may change the relative order of equal elements."
                }
            ],
            dbms: [
                {
                    question: "What does ACID stand for in database systems?",
                    options: ["Atomicity, Consistency, Isolation, Durability", "Accuracy, Completeness, Integrity, Dependability", "Association, Calculation, Integration, Distribution", "Authentication, Confidentiality, Integrity, Delivery"],
                    correct: 0,
                    explanation: "ACID properties ensure database reliability: Atomicity, Consistency, Isolation, Durability."
                },
                {
                    question: "Which normal form eliminates partial dependencies?",
                    options: ["1NF", "2NF", "3NF", "BCNF"],
                    correct: 1,
                    explanation: "Second Normal Form (2NF) eliminates partial dependencies on composite primary keys."
                },
                {
                    question: "What is a foreign key?",
                    options: ["Key from another table", "Unique identifier", "Primary key in another table", "Reference to primary key of another table"],
                    correct: 3,
                    explanation: "Foreign key is a field that references the primary key of another table, maintaining referential integrity."
                },
                {
                    question: "Which SQL command removes a table structure?",
                    options: ["DELETE", "REMOVE", "DROP", "TRUNCATE"],
                    correct: 2,
                    explanation: "DROP command removes the entire table structure along with data."
                },
                {
                    question: "What is a deadlock in database?",
                    options: ["Two transactions waiting for each other", "Transaction that never completes", "Database corruption", "Lock timeout"],
                    correct: 0,
                    explanation: "Deadlock occurs when two or more transactions wait for each other to release resources."
                },
                {
                    question: "Which isolation level prevents dirty reads?",
                    options: ["Read Uncommitted", "Read Committed", "Repeatable Read", "Serializable"],
                    correct: 1,
                    explanation: "Read Committed isolation level prevents dirty reads by only reading committed data."
                },
                {
                    question: "What is denormalization in database design?",
                    options: ["Removing normal forms", "Adding redundancy for performance", "Creating indexes", "Removing foreign keys"],
                    correct: 1,
                    explanation: "Denormalization intentionally adds redundancy to improve query performance."
                },
                {
                    question: "Which join